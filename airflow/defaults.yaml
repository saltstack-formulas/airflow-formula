# -*- coding: utf-8 -*-
# vim: ft=yaml
---
airflow:
  dir:
    airflow:
      lib: /var/lib/airflow
      tmp: /tmp/airflow
      service: /lib/systemd/system
      environ: /etc/sysconfig
      base: /home   # os sensitive user homedir
      userhome: null    # AIRFLOW_HOME is set by pillar data, otherwise map.jinja
      virutalenv: null  # set by pillar data, otherwise map.jinja
  identity:
    rootuser: root
    rootgroup: root
    airflow:
      user: airflow    # user, where airflow is installed
      group: airflow
      skip_user_state: false     # create local user
  database:
    airflow:
      initdb: true
      user: airflow
      pass: airflow
      email: airflow@localhost
      # yamllint disable-line rule:braces rule:syntax
      script: '{{ range(1, 2000)|random }}.py'
  config:
    airflow:
      file: airflow.cfg
      webserver: webserver_config.py
      initdbcmd: 'db init'
      venv_cmd: virtualenv

      flask:
        auth_type: AUTH_DB
        app_theme: null  # use default

        ##### These are verifed with Active Directory ####
        auth_ldap_server: ldap://ldapserver.new  # must include protocol (ldap or ldaps)
        auth_ldap_append_domain: example.com
        auth_ldap_uid_field: uid
        auth_ldap_search: OU=myOrg,DC=example,DC=com
        auth_ldap_search_filter: (memberOf=CN=myGrp,OU=myOrg,DC=example,DC=com)
        auth_ldap_group_field: memberOf
        auth_ldap_allow_self_signed: true
        auth_user_registration_role: User
        auth_user_registration: true
        # auth_role_admin: Admin
        # auth_role_public: Public
        # auth_roles_mapping: null
        # auth_roles_sync_at_login: false
        # permanent_session_lifetime: 1800
        webserver:
          # The ip specified when starting the web server
          web_server_host: 0.0.0.0
          # The port on which to run the web server
          web_server_port: 8080

      content:
        api: {}
        celery_kubernetes_executor: {}
        celery:
          # https://docs.celeryproject.org/en/v5.0.2/getting-started/brokers
          broker_url: redis://127.0.0.1:6379/0
          # result_backend: db+postgresql://airflow:airflow@127.0.0.1/airflow
        cli: {}
        core:
          dags_folder: /home/airflow/dags
          plugins_folder: /home/airflow/plugins
          executor: CeleryExecutor
          default_timezone: utc
          load_examples: false
          # https://stackoverflow.com/questions/45455342
          sql_alchemy_conn: postgresql+psycopg2://airflow:airflow@127.0.0.1/airflow
          security: ''
        dask: {}
        elasticsearch: {}
        kerberos: {}
        kubernetes: {}
        ldap: {}   # gone in v2
        logging: {}
        metrics: {}
        operators:
          default_queue: airflow
        secrets: {}
        sentry: {}
        smart_sensor: {}
        smtp: {}
        webserver:
          # yamllint disable-line rule:braces rule:syntax
          secret_key: {{ range(1, 2000)|random }}
          auth_backend: airflow.contrib.auth.backends.password_auth
      state_colors:
        # https://airflow.apache.org/docs/apache-airflow/stable/howto/customize-state-colors-ui.html
        queued: 'darkgray'
        running: '#01FF70'
        success: '#2ECC40'
        failed: 'firebrick'
        up_for_retry: 'yellow'
        up_for_reschedule: 'turquoise'
        upstream_failed: 'orange'
        skipped: 'darkorchid'
        scheduled: 'tan'

  environ:
    airflow:
      file: airflow
      content: {}
  service:
    airflow:
      names:
        - airflow-celery-flower
        - airflow-scheduler
        - airflow-webserver
        - airflow-celery-worker
      enabled:
        - airflow-celery-flower
        - airflow-scheduler
        - airflow-webserver
        - airflow-celery-worker
  pkg:
    airflow:
      version: 2.1.0
      use_upstream: pip
      name: apache-airflow
      commands:
        - airflow
      uri_a: https://github.com/apache/airflow/releases/download
      # yamllint disable-line rule:line-length
      uri_c: https://raw.githubusercontent.com/apache/airflow/constraints-VERSION/constraints-PYVER.txt
      archive:
        options: '--strip-components=1'
      suffix: tar.gz
      deps: []
      extras:
        - password
        - kerberos
        - devel
      # https://github.com/pypa/pip/issues/9187
      # https://pip.pypa.io/en/latest/user_guide/#dependency-resolution-backtracking
      no_pips_deps: true  # for salt.virtualenv.managed.no_deps flag
      pips:
        ### These could be moved to pillar.example instead of being default
        # for functionality
        - cryptography
        - password
        - mysql-connector
        - attr
        - flask_oauthlib
        - great_expectations
        - flask-bcrypt
        - psycopg2-binary
        # from airflow's setup.py
        - alembic
        - argcomplete
        - attrs
        - cached_property
        - cattrs
        - pywinrm[kerberos]

        # https://docs.celeryproject.org/en/v5.0.2/getting-started/brokers
        - celery[librabbitmq,redis,sqs]

        - colorlog
        - configparser
        - croniter
        - dill
        - email-validator
        - flask
        - flask-admin
        - flask-appbuilder
        - flask-caching
        - flask-login
        - flask-swagger
        - flask-wtf
        # https://github.com/mher/flower/issues/1029
        - flower>=1.0.0
        - funcsigs
        - future
        - graphviz
        - gunicorn
        - importlib-metadata
        - iso8601
        - jinja2
        - json-merge-patch
        - jsonschema
        - lazy_object_proxy
        - markdown
        - marshmallow-sqlalchemy
        - packaging
        - pandas
        - pendulum
        - pep562
        - psutil
        - pygments
        - requests
        - setproctitle
        - sqlalchemy
        - sqlalchemy_jsonfield
        - tabulate
        - tenacity
        - thrift
        - typing
        - typing-extensions
        - tzlocal
        - unicodecsv
        - werkzeug
        - zope.deprecation
        - idna
        - jsonpointer
        - rfc3987
        - strict-rfc3339
        - webcolors
        - pyarrow<=0.18.0,>=0.17.0  # snowflake wants this version?
        # bug: https://github.com/apache/airflow/issues/12881
        - apache-airflow-providers-snowflake==1.0.0
        # Ecosystem
        - pylint-airflow
        - dag-factory
        - airflow-code-editor
        - black
        - afctl
        - gusty
        - jupyter
        - tableauserverclient
        - azure-storage-blob
        - paramiko
        # authentication
        # python-ldap
        - requests-kerberos
        - requests-credssp
        - requests_ntlm

  misc:
    refresh: true
    reload: true
    clean: false
  linux:
    altpriority: 0   # zero disables alternatives
  retry_option:
    # https://docs.saltstack.com/en/latest/ref/states/requisites.html#retrying-states
    attempts: 3
    until: true
    interval: 60
    splay: 10
  div: '/'

  # Just here for testing
  added_in_defaults: defaults_value
  winner: defaults

  # Just here as experiemnt/documentation
  supported:
    - airflow
  wanted:
    - airflow
  depends:
    - postgres
    - rabbitmq
    - redis
