########################################################################
# File managed by Salt at <'{{ source }}'>.
# Your changes may be overwritten.
########################################################################
{%- set f = flask %}
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
"""Default configuration for the Airflow webserver"""
import os

from flask_appbuilder.security.manager import {{ "AUTH_DB" if "auth_type" not in f else f.auth_type|upper }}

# from flask_appbuilder.security.manager import AUTH_LDAP
# from flask_appbuilder.security.manager import AUTH_OAUTH
# from flask_appbuilder.security.manager import AUTH_OID
# from flask_appbuilder.security.manager import AUTH_REMOTE_USER


basedir = os.path.abspath(os.path.dirname(__file__))

# Flask-WTF flag for CSRF
WTF_CSRF_ENABLED = {{ "True" if "wtf_csrf_enabled" not in f else f.wtf_csrf_enabled }}

# ----------------------------------------------------
# AUTHENTICATION CONFIG
# ----------------------------------------------------
# For details on how to set up each of the following authentication, see
# http://flask-appbuilder.readthedocs.io/en/latest/security.html# authentication-methods
# for details.

# The authentication type
# AUTH_OID : Is for OpenID
# AUTH_DB : Is for database
# AUTH_LDAP : Is for LDAP
# AUTH_REMOTE_USER : Is for using REMOTE_USER from web server
# AUTH_OAUTH : Is for OAuth
AUTH_TYPE = {{ "AUTH_DB" if "auth_type" not in f else f.auth_type }}

# customize the name of the builtin roles for Admin and Public accesses
# AUTH_ROLE_ADMIN = '{{ "Admin" if "auth_role_admin" not in f else f.auth_role_admin }}'
# AUTH_ROLE_PUBLIC = '{{ "Public" if "auth_role_public" not in f else f.auth_role_public }}'

# Will allow user self registration
AUTH_USER_REGISTRATION = {{ "True" if "auth_user_registration" not in f else f.auth_user_registration }}

# The default user self registration role
AUTH_USER_REGISTRATION_ROLE = '{{ "User" if "auth_user_registration_role" not in f else f.auth_user_registration_role }}'

# ----------------------------------------------------
# AUTHENTICATION PROVIDERS
# ----------------------------------------------------
# When using OAuth Auth, uncomment to setup provider(s) info
# Google OAuth example:
# OAUTH_PROVIDERS = [{
#   'name':'google',
#     'token_key':'access_token',
#     'icon':'fa-google',
#         'remote_app': {
#             'api_base_url':'https://www.googleapis.com/oauth2/v2/',
#             'client_kwargs':{
#                 'scope': 'email profile'
#             },
#             'access_token_url':'https://accounts.google.com/o/oauth2/token',
#             'authorize_url':'https://accounts.google.com/o/oauth2/auth',
#             'request_token_url': None,
#             'client_id': GOOGLE_KEY,
#             'client_secret': GOOGLE_SECRET_KEY,
#         }
# }]

# When using LDAP Auth, setup the ldap server
AUTH_LDAP_SERVER = '{{ "ldap://ldapserver.new" if "auth_ldap_server" not in f else f.auth_ldap_server }}'

# Ldap and Active Directory
AUTH_LDAP_SEARCH = '{{ "OU=myOrg,DC=example,DC=com" if "auth_ldap_search" not in f else f.auth_ldap_search }}'
AUTH_LDAP_SEARCH_FILTER = '{{ "(memberOf=CN=myGrp,OU=myOrg,DC=example,DC=com)" if "auth_ldap_search_filter" not in f else f.auth_ldap_search_filter }}'
AUTH_LDAP_APPEND_DOMAIN = '{{ "example.com" if "auth_ldap_append_domain" not in f else f.auth_ldap_append_domain }}'
AUTH_LDAP_ALLOW_SELF_SIGNED = {{ "False" if "auth_ldap_allow_self_signed" not in f else f.auth_ldap_allow_self_signed }}

# For self user registration
AUTH_LDAP_UID_FIELD = '{{ "userPrincipalName" if "auth_ldap_uid_field" not in f else f.auth_ldap_uid_field }}'  # or sAMAccountName
AUTH_LDAP_FIRSTNAME_FIELD = '{{ "givenName" if "auth_ldap_firstname_field" not in f else f.auth_ldap_firstname_field }}'
AUTH_LDAP_LASTTNAME_FIELD = '{{ "sn" if "auth_ldap_lastname_field" not in f else f.auth_ldap_lastname_field }}'
AUTH_LDAP_EMAIL_FIELD = '{{ "mail" if "auth_ldap_email_field" not in f else f.auth_ldap_email_field }}'

# For OpenLDAP
AUTH_LDAP_SEARCH = '{{ "DC=example,DC=com" if "auth_ldap_search" not in f else f.auth_ldap_search }}'
# AUTH_LDAP_BIND_USER = '{{ "(CN=Query User,OU=myOrg,DC=example,DC=com)" if "auth_ldap_bind_user" not in f else f.auth_ldap_bind_user }}'
# AUTH_LDAP_BIND_PASSWORD = '{{ "password" if "auth_ldap_bind_password" not in f else f.auth_ldap_bind_password }}'

AUTH_LDAP_USE_TLS = {{ "False" if "auth_ldap_use_tls" not in f else f.auth_ldap_use_tls }}
AUTH_LDAP_TLS_CACERTFILE = '{{ "/etc/pki/ca-trust/source/anchors/$root_CA.crt" if "auth_ldap_tls_cacertfile" not in f else f.auth_ldap_tls_cacertfile }}'

{%- if 'auth_roles_mapping' in f and f.auth_roles_mapping is mapping %}
AUTH_ROLES_MAPPING = {
    {%- for k,v in f.auth_roles_mapping.items() %}
        "{{ k }}": ["{{ v }}"],
    {%- endfor %}
}
{%- endif %}

AUTH_ROLES_SYNC_AT_LOGIN = {{ "False" if "auth_roles_sync_at_login" not in f else f.auth_roles_sync_at_login }}
AUTH_LDAP_GROUP_FIELD = '{{ "memberOf" if "auth_ldap_group_field" not in f else f.auth_ldap_group_field }}'
PERMANENT_SESSION_LIFETIME = {{ "1800" if "permanent_session_lifetime" not in f else f.permanent_session_lifetime }}

# When using OpenID Auth, uncomment to setup OpenID providers.
# example for OpenID authentication
# OPENID_PROVIDERS = [
#    { 'name': 'Yahoo', 'url': 'https://me.yahoo.com' },
#    { 'name': 'AOL', 'url': 'http://openid.aol.com/<username>' },
#    { 'name': 'Flickr', 'url': 'http://www.flickr.com/<username>' },
#    { 'name': 'MyOpenID', 'url': 'https://www.myopenid.com' }]

# ----------------------------------------------------
# Theme CONFIG
# ----------------------------------------------------
# Flask App Builder comes up with a number of predefined themes
# that you can use for Apache Airflow.
# http://flask-appbuilder.readthedocs.io/en/latest/customizing.html#changing-themes
# Please make sure to remove "navbar_color" configuration from airflow.c
# in order to fully utilize the theme. (or use that property in conjunction with theme)
APP_THEME = "{{ 'bootstrap-theme.css' if 'app_theme' not in f else f.app_theme }}"
# APP_THEME = "amelia.css"
# APP_THEME = "cerulean.css"
# APP_THEME = "cosmo.css"
# APP_THEME = "cyborg.css"
# APP_THEME = "darkly.css"
# APP_THEME = "flatly.css"
# APP_THEME = "journal.css"
# APP_THEME = "lumen.css"
# APP_THEME = "paper.css"
# APP_THEME = "readable.css"
# APP_THEME = "sandstone.css"
# APP_THEME = "simplex.css"
# APP_THEME = "slate.css"
# APP_THEME = "solar.css"
# APP_THEME = "spacelab.css"
# APP_THEME = "superhero.css"
# APP_THEME = "united.css"
# APP_THEME = "yeti.css"
